---
- include: bootstrap.yml
  tags: ['devbox-bootstrap']

- include: databases.yml
  when: devbox_projects|length
  tags: ['devbox-databases']


- include: project/default.yml
  tags: ['devbox-default']
  when: devbox_projects|length and (item.type is not defined or item.type == 'default') and (item.remove is not defined or item.remove != true)
  with_items: '{{ devbox_projects }}'
  loop_control:
    loop_var: project

- include: project/magento.yml
  tags: ['devbox-magento']
  when: devbox_projects|length and (item.type is defined and item.type == 'magento') and (item.remove is not defined or item.remove != true)
  with_items: '{{ devbox_projects }}'
  loop_control:
    loop_var: project

- include: project/magento2.yml
  tags: ['devbox-magento2']
  when: devbox_projects|length and (item.type is defined and item.type == 'magento2') and (item.remove is not defined or item.remove != true)
  with_items: '{{ devbox_projects }}'
  loop_control:
    loop_var: project


#- include: cleanup.yml
#  tags: ['devbox-cleanup']

- include: project/cleanup.yml
  tags: ['devbox-cleanup']
  when: devbox_projects|length and item.remove is defined and item.remove == true
  with_items: '{{ devbox_projects }}'
  loop_control:
    loop_var: project


- include: awscli.yml
  when: devbox_projects|length
  tags: ['devbox-awscli']

- include: motd.yml
  when: devbox_projects|length
  tags: ['devbox-motd']






#
#/var/www/#{new_resource.project}/#{new_resource.environment}/#{name}
#
#  user 'systemstorage' do
#    home '/home/systemstorage'
#  end
#
#  group 'systemstorage' do
#    action :create
#  end
#
#  %w(database files).each do |name|
#    directory "/home/systemstorage/systemstorage/#{new_resource.project}/backup/#{new_resource.environment}/#{name}" do
#      owner 'systemstorage'
#      group 'systemstorage'
#      mode 00775
#      recursive true
#      action :create
#    end
#  end
#
#  directory "/home/systemstorage/systemstorage/#{new_resource.project}/bin" do
#    owner 'systemstorage'
#    group 'systemstorage'
#    mode 00775
#    recursive true
#    action :create
#  end